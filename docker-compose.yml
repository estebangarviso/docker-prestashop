version: '3.9'
services:
  db:
    build:
      context: ./containers/mysql
    tty: true
    restart: always
    ports:
      - 3306:3306
    profiles:
      - db
    networks:
      - back-tier
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWD}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWD}
    volumes:
      - db:/var/lib/mysql
    healthcheck:
      test: ['CMD-SHELL', 'mysqladmin', 'ping', '-h', 'localhost', '-u', '${DB_USER}', '-p${DB_PASSWD}']
      timeout: 20s
      retries: 10
    labels:
      traefik.enable: false
  app:
    build:
      context: ./containers/php
      args:
        PS_VERSION: ${PS_VERSION}
        PS_DOMAIN: ${PS_DOMAIN}
        DB_SERVER: ${DB_SERVER:-db}
        DB_PORT: ${DB_PORT:-3306}
        DB_NAME: ${DB_NAME}
        DB_USER: ${DB_USER}
        DB_PASSWD: ${DB_PASSWD}
        DB_PREFIX: ${DB_PREFIX}
        ADMIN_MAIL: ${ADMIN_MAIL}
        ADMIN_PASSWD: ${ADMIN_PASSWD}
        PS_LANGUAGE: ${PS_LANGUAGE}
        PS_COUNTRY: ${PS_COUNTRY}
        PS_ENABLE_SSL: ${PS_ENABLE_SSL}
        PS_SHOP_NAME: ${PS_SHOP_NAME}
        PS_TIMEZONE: ${PS_TIMEZONE}
        PS_FOLDER_ADMIN: ${PS_FOLDER_ADMIN:-admin}
        PS_FOLDER_INSTALL: ${PS_FOLDER_INSTALL:-install}
        PS_HANDLE_DYNAMIC_DOMAIN: ${PS_HANDLE_DYNAMIC_DOMAIN:-0}
        PS_BASE_URI: /
    labels:
      traefik.enable: true
      traefik.http.routers.app.rule: Host(`${PS_DOMAIN}`)
      traefik.http.routers.app.entrypoints: web, websecure
      traefik.http.routers.app.tls: true
      traefik.http.routers.app.tls.certresolver: ${TRAEFIK_CERT_RESOLVER:-production}
    mem_limit: 256m
    mem_reservation: 128m
    memswap_limit: 512m
    cpus: 0.5
    restart: on-failure:15
    depends_on:
      db:
        condition: service_healthy
    networks:
      - front-tier
      - back-tier
    volumes:
      - 'app:/var/www/html'
    expose:
      - '9000'
    healthcheck:
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
  proxy:
    build:
      context: ./containers/traefik
      args:
        PROXY_RESOLVER_EMAIL: ${PROXY_RESOLVER_EMAIL}
    restart: always
    ports:
      - 80:80
      - 443:443
    profiles:
      - proxy
    depends_on:
      app:
        condition: service_healthy
    networks:
      - front-tier
      - back-tier
    command: --providers.docker
    volumes:
      - proxy:/etc/traefik
      - /var/run/docker.sock:/var/run/docker.sock:ro
networks:
  front-tier:
    driver: bridge
  back-tier:
    driver: bridge
volumes:
  db:
  app:
  proxy:
