version: '3.9'
services:
  mysql:
    build:
      context: ./docker-images/mysql
      args:
        MYSQL_VERSION: ${MYSQL_VERSION:-8.0.32}
    tty: true
    container_name: ${APP_ENV}_mysql
    restart: always
    ports:
      - '3306:3306'
    profiles:
      - db
    networks:
      - back-tier
    environment:
      MYSQL_DATABASE: db_${APP_ENV}
      MYSQL_USER: db_${APP_ENV}_user
      MYSQL_PASSWORD: ${DB_PASSWD}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWD}
    volumes:
      - 'mysql:/var/lib/mysql'
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-h', '127.0.0.1', '-u', 'root', '-p${DB_PASSWD}']
      timeout: 20s
      retries: 10
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: ${APP_ENV}_mysqladmin
    restart: always
    ports:
      - '3307:80'
    depends_on:
      mysql:
        condition: service_started
    profiles:
      - db
    networks:
      - back-tier
    environment:
      PMA_HOST: ${APP_ENV}_mysql
      PMA_PORT: 3306
  php:
    build:
      context: ./docker-images/php
      args:
        PS_VERSION: ${PS_VERSION}
        PS_DOMAIN: ${PS_DOMAIN:-localhost} # add machine domain to env (e.g. myshop.com) or let it like this to use container IP
        DB_SERVER: ${APP_ENV}_mysql
        DB_PORT: 3306
        DB_NAME: db_${APP_ENV}
        DB_USER: db_${APP_ENV}_user
        DB_PASSWD: ${DB_PASSWD}
        DB_PREFIX: ${APP_ENV}_
        ADMIN_MAIL: ${ADMIN_MAIL}
        ADMIN_PASSWD: ${ADMIN_PASSWD}
        PS_LANGUAGE: ${PS_LANGUAGE}
        PS_COUNTRY: ${PS_COUNTRY}
        PS_ENABLE_SSL: ${PS_ENABLE_SSL}
        PS_SHOP_NAME: ${PS_SHOP_NAME}
        PS_TIMEZONE: ${PS_TIMEZONE}
        PS_FOLDER_ADMIN: ${PS_FOLDER_ADMIN}
        PS_HANDLE_DYNAMIC_DOMAIN: ${PS_HANDLE_DYNAMIC_DOMAIN:-0}
        PS_BASE_URI: /
    labels:
      email: e.garvisovenegas@gmail.com
      env: ${APP_ENV}
    mem_limit: 256m
    mem_reservation: 128m
    memswap_limit: 512m
    cpus: 0.5
    container_name: '${APP_ENV}_php'
    restart: on-failure:15
    depends_on:
      mysql:
        condition: service_started
    networks:
      - front-tier
      - back-tier
    volumes:
      - 'www:/var/www/html'
    env_file:
      - 'env/.env.${APP_ENV}'
    expose:
      - '9000'
    healthcheck:
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
  nginx:
    build:
      context: ./docker-images
      dockerfile: nginx/Dockerfile
      args:
        APP_ENV: ${APP_ENV}
        NGINX_HOST: ${PS_DOMAIN:-localhost}
        PS_FOLDER_ADMIN: ${PS_FOLDER_ADMIN}
        PS_LANGUAGE: ${PS_LANGUAGE}
    container_name: ${APP_ENV}_nginx
    restart: always
    depends_on:
      - php
    profiles:
      - web
    networks:
      - front-tier
    volumes:
      - 'www:/var/www/html'
      - 'nginx:/etc/nginx/conf.d'
    ports:
      - '${PS_PORT}:80'
      # - '${PS_PORT_SSL}:443'
networks:
  front-tier:
    driver: bridge
  back-tier:
    driver: bridge
volumes:
  mysql:
  www:
  nginx:
